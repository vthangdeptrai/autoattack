-- Auto Stats GUI Rework v3.3 (Tr·∫Øng + Xanh n∆∞·ªõc, m·ªÅm m·∫°i, c√≥ th·ªÉ di chuy·ªÉn, animation hover, thu nh·ªè an to√†n)
if game:GetService("CoreGui"):FindFirstChild("AutoStatsGUI") then
    game:GetService("CoreGui").AutoStatsGUI:Destroy()
end

local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

_G.AutoStatsRunning = true

-- T·∫°o ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoStatsGUI"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false

-- Main Frame
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 240, 0, 320)
Frame.Position = UDim2.new(0.05, 0, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

local FrameCorner = Instance.new("UICorner")
FrameCorner.CornerRadius = UDim.new(0, 16)
FrameCorner.Parent = Frame

-- Shadow effect
local FrameStroke = Instance.new("UIStroke")
FrameStroke.Thickness = 2
FrameStroke.Transparency = 0.85
FrameStroke.Parent = Frame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 35)
TitleBar.BackgroundColor3 = Color3.fromRGB(173, 216, 230) -- xanh n∆∞·ªõc d·ªãu
TitleBar.Parent = Frame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 16)
TitleCorner.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -70, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "üêü Auto Stats"
Title.TextColor3 = Color3.fromRGB(0, 80, 160)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- N√∫t + v√† - (c√≥ g√≥c bo tr√≤n)
local function createCornerButton(text, posX)
    local Btn = Instance.new("TextButton")
    Btn.Size = UDim2.new(0, 30, 1, 0)
    Btn.Position = UDim2.new(1, posX, 0, 0)
    Btn.Text = text
    Btn.Font = Enum.Font.GothamBold
    Btn.TextSize = 20
    Btn.BackgroundColor3 = text == "+" and Color3.fromRGB(180, 255, 180) or Color3.fromRGB(255, 180, 180)
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 12)
    Corner.Parent = Btn
    Btn.Parent = TitleBar
    return Btn
end

local PlusBtn = createCornerButton("+", -60)
local MinusBtn = createCornerButton("-", -30)

local Hidden = false
local FullSize = UDim2.new(0, 240, 0, 320)

-- Content
local Content = Instance.new("Frame")
Content.Size = UDim2.new(1, 0, 1, -35)
Content.Position = UDim2.new(0, 0, 0, 35)
Content.BackgroundTransparency = 1
Content.Parent = Frame

-- Bi·∫øn
local SelectedStat = "Melee"
local AutoEnabled = false
local PointsToAdd = 1

-- Danh s√°ch Stat
local Stats = {"Melee", "Defense", "Sword", "Gun"}
local Buttons = {}

local function UpdateSelection()
    for _,btn in pairs(Buttons) do
        if btn.Text == SelectedStat then
            btn.BackgroundColor3 = Color3.fromRGB(173, 216, 230)
        else
            btn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        end
    end
end

-- T·∫°o button v·ªõi hover animation
for i,stat in ipairs(Stats) do
    local Btn = Instance.new("TextButton")
    Btn.Size = UDim2.new(1, -20, 0, 30)
    Btn.Position = UDim2.new(0, 10, 0, 5 + (i-1)*35)
    Btn.Text = stat
    Btn.Font = Enum.Font.GothamBold
    Btn.TextSize = 14
    Btn.BackgroundColor3 = Color3.fromRGB(255,255,255)
    local BtnCorner = Instance.new("UICorner")
    BtnCorner.CornerRadius = UDim.new(0,12)
    BtnCorner.Parent = Btn
    Btn.Parent = Content
    Buttons[#Buttons+1] = Btn

    Btn.MouseButton1Click:Connect(function()
        SelectedStat = stat
        UpdateSelection()
    end)

    -- Hover effect
    Btn.MouseEnter:Connect(function()
        Btn:TweenSize(UDim2.new(1, -18, 0, 32), "Out", "Quad", 0.15, true)
        Btn.BackgroundColor3 = Color3.fromRGB(200, 230, 255)
    end)
    Btn.MouseLeave:Connect(function()
        Btn:TweenSize(UDim2.new(1, -20, 0, 30), "Out", "Quad", 0.15, true)
        UpdateSelection()
    end)
end
UpdateSelection()

-- Slider
local SliderFrame = Instance.new("Frame")
SliderFrame.Size = UDim2.new(1, -20, 0, 50)
SliderFrame.Position = UDim2.new(0, 10, 0, 150)
SliderFrame.BackgroundTransparency = 1
SliderFrame.Parent = Content

local Slider = Instance.new("TextButton")
Slider.Size = UDim2.new(1, 0, 0, 12)
Slider.Position = UDim2.new(0, 0, 0, 10)
Slider.BackgroundColor3 = Color3.fromRGB(220,220,220)
Slider.Text = ""
Slider.AutoButtonColor = false
Slider.Parent = SliderFrame

local Fill = Instance.new("Frame")
Fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
Fill.Size = UDim2.new(0,0,1,0)
local FillCorner = Instance.new("UICorner")
FillCorner.CornerRadius = UDim.new(0,12)
FillCorner.Parent = Fill
Fill.Parent = Slider

local SliderLabel = Instance.new("TextLabel")
SliderLabel.Size = UDim2.new(1, 0, 0, 20)
SliderLabel.Position = UDim2.new(0, 0, 0, 25)
SliderLabel.Text = "Points: 1"
SliderLabel.TextColor3 = Color3.fromRGB(0,0,0)
SliderLabel.Font = Enum.Font.GothamBold
SliderLabel.TextSize = 14
SliderLabel.BackgroundTransparency = 1
SliderLabel.Parent = SliderFrame

Slider.MouseButton1Down:Connect(function(x,y)
    local uis = game:GetService("UserInputService")
    local function move(input)
        local scale = math.clamp((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X,0,1)
        Fill:TweenSize(UDim2.new(scale,0,1,0), "Out", "Quad", 0.2, true)
        PointsToAdd = math.max(1, math.floor(scale * 100))
        SliderLabel.Text = "Points: "..PointsToAdd
    end
    move({Position=Vector2.new(x,y)})
    local conn1, conn2
    conn1 = uis.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            move(input)
        end
    end)
    conn2 = uis.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            conn1:Disconnect()
            conn2:Disconnect()
        end
    end)
end)

-- Toggle Auto
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(1, -20, 0, 40)
ToggleBtn.Position = UDim2.new(0, 10, 0, 230)
ToggleBtn.Text = "Auto: OFF"
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 16
ToggleBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0,16)
ToggleCorner.Parent = ToggleBtn
ToggleBtn.Parent = Content

ToggleBtn.MouseButton1Click:Connect(function()
    AutoEnabled = not AutoEnabled
    ToggleBtn.Text = "Auto: "..(AutoEnabled and "ON" or "OFF")
    ToggleBtn:TweenSize(ToggleBtn.Size, "Out", "Quad", 0.15, true)
    ToggleBtn:TweenPosition(ToggleBtn.Position, "Out", "Quad", 0.15, true)
    ToggleBtn.BackgroundColor3 = AutoEnabled and Color3.fromRGB(0,170,255) or Color3.fromRGB(200,0,0)
end)

-- N√∫t + / - (thu nh·ªè an to√†n)
MinusBtn.MouseButton1Click:Connect(function()
    if Hidden then return end -- n·∫øu ƒë√£ thu nh·ªè, kh√¥ng l√†m g√¨
    Hidden = true
    Content.Visible = false
    Frame:TweenSize(UDim2.new(0, 240, 0, 35), "Out", "Quad", 0.2, true)
end)

PlusBtn.MouseButton1Click:Connect(function()
    if Hidden then
        Hidden = false
        Content.Visible = true
        Frame:TweenSize(FullSize, "Out", "Quad", 0.2, true)
    end
end)

-- Drag GUI b·∫±ng TitleBar
do
    local dragging, dragInput, dragStart, startPos = false, nil, nil, nil
    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Fake Auto Stats loop
task.spawn(function()
    while _G.AutoStatsRunning do
        if AutoEnabled then
            print("ƒêang c·ªông "..PointsToAdd.." point v√†o "..SelectedStat)
            -- TODO: g·ª≠i RemoteEvent ·ªü ƒë√¢y
        end
        task.wait(1)
    end
end)
